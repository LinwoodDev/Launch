name: Deploy documentation

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        apps:
          - name: butterfly
            directory: launch.butterfly.linwood
            env: |
              APP_NAME=Butterfly
              APP_DOWNLOAD_URL=https://butterfly.linwood.dev/downloads
              APP_WEB_URL=https://web.butterfly.linwood.dev
              APP_WEB_PREVIEW_URL=https://preview.butterfly.linwood.dev
            asset_links: |
              [
                {
                  "relation": [
                    "delegate_permission/common.handle_all_urls",
                    "delegate_permission/common.get_login_creds"
                  ],
                  "target": {
                    "namespace": "android_app",
                    "package_name": "dev.linwood.butterfly",
                    "sha256_cert_fingerprints": [
                      "AF:8D:DC:88:8E:88:CE:5A:3C:DE:87:2A:4B:D7:B3:62:53:16:AC:80:32:A3:0D:40:51:7F:2F:42:49:64:32:F1"
                    ]
                  }
                }
              ]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - name: Add env
        run: |
          echo "${{ matrix.apps.env }}" >> .env
      - name: Add asset links if available
        if: matrix.apps.asset_links
        env:
          ASSET_LINKS: ${{ matrix.apps.asset_links }}
        run: |
          mkdir -p public/.well-known
          echo "$ASSET_LINKS" >> public/.well-known/assetlinks.json
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Deploy to SFTP
        if: github.ref == 'refs/heads/main'
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
          SFTP_KEY: ${{ secrets.SFTP_KEY }}
          SFTP_KNOWN_HOSTS: ${{secrets.SFTP_KNOWN_HOSTS}}
        run: |
          echo "$SFTP_KEY" > sftp_key
          chmod 600 sftp_key
          echo "$SFTP_KNOWN_HOSTS" > known_hosts
          chmod 600 known_hosts
          rsync -avz --delete -e "ssh -i sftp_key -o UserKnownHostsFile=known_hosts" dist/ $SFTP_USERNAME@$SFTP_HOST:/var/www/${{ matrix.apps.directory }}
